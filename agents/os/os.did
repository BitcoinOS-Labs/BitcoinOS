
type CreateCanisterResult = variant {
    Ok: principal;
    Err: Error;
};

type WalletOwnerResult = variant {
    Ok: WalletOwner;
    Err: Error;
};

type WalletOwner = record {
    canister_id: principal;
    owner: principal;
    created_at: nat64;
};

type WalletAction = record {
    operator: principal;
    action: Action;
    op_time: nat64;
};

type Action = variant {
    Create;
    Delete;
};

type Error = variant {
    AlreadyExists;
    CreateCanisterFailed: record { msg: text; };
    WriteError;
    Unknown;
};

service : {
    "create_wallet": () -> (CreateCanisterResult);

    "count_wallet": () -> (nat64) query;
    "list_wallet": () -> (vec WalletOwner) query;
    "get_wallet_action": (nat64) -> (opt WalletAction) query;

};

